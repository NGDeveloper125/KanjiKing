
const createHiraganaStore = () => {
    const store = new Map();
    const data = [
        {english: 'a', jap: 'あ'},
        {english: 'i', jap: 'い'},
        {english: 'u', jap: 'う'},
        {english: 'e', jap: 'え'},
        {english: 'o', jap: 'お'},
        {english: 'ka', jap: 'か'},
        {english: 'ki', jap: 'き'},
        {english: 'ku', jap: 'く'},
        {english: 'ke', jap: 'け'},
        {english: 'ko', jap: 'こ'},
        {english: 'kya', jap: 'きゃ'},
        {english: 'kyu', jap: 'きゅ'},
        {english: 'kyo', jap: 'きょ'},
        {english: 'ga', jap: 'が'},
        {english: 'gi', jap: 'ぎ'},
        {english: 'gu', jap: 'ぐ'},
        {english: 'ge', jap: 'げ'},
        {english: 'go', jap: 'ご'},
        {english: 'gya', jap: 'ぎゃ'},
        {english: 'gyu', jap: 'ぎゅ'},
        {english: 'gyo', jap: 'ぎょ'},
        {english: 'sa', jap: 'さ'},
        {english: 'shi', jap: 'し'},
        {english: 'su', jap: 'す'},
        {english: 'se', jap: 'せ'},
        {english: 'so', jap: 'そ'},
        {english: 'sha', jap: 'しゃ'},
        {english: 'shu', jap: 'しゅ'},
        {english: 'sho', jap: 'しょ'},
        {english: 'za', jap: 'ざ'},
        {english: 'ji', jap: 'じ'},
        {english: 'zu', jap: 'ず'},
        {english: 'ze', jap: 'ぜ'},
        {english: 'zo', jap: 'ぞ'},
        {english: 'ja', jap: 'じゃ'},
        {english: 'ju', jap: 'じゅ'},
        {english: 'jo', jap: 'じょ'},
        {english: 'ta', jap: 'た'},
        {english: 'chi', jap: 'ち'},
        {english: 'tsu', jap: 'つ'},
        {english: 'te', jap: 'て'},
        {english: 'to', jap: 'と'},
        {english: 'cha', jap: 'ちゃ'},
        {english: 'chu', jap: 'ちゅ'},
        {english: 'cho', jap: 'ちょ'},
        {english: 'da', jap: 'だ'},
        {english: 'ji', jap: 'ぢ'},
        {english: 'zu', jap: 'づ'},
        {english: 'de', jap: 'で'},
        {english: 'do', jap: 'ど'},
        {english: 'ja', jap: 'ぢゃ'},
        {english: 'ju', jap: 'ぢゅ'},
        {english: 'jo', jap: 'ぢょ'},
        {english: 'na', jap: 'な'},
        {english: 'ni', jap: 'に'},
        {english: 'nu', jap: 'ぬ'},
        {english: 'ne', jap: 'ね'},
        {english: 'no', jap: 'の'},
        {english: 'nya', jap: 'にゃ'},
        {english: 'nyu', jap: 'にゅ'},
        {english: 'nyo', jap: 'にょ'},
        {english: 'ha', jap: 'は'},
        {english: 'hi', jap: 'ひ'},
        {english: 'fu', jap: 'ふ'},
        {english: 'he', jap: 'へ'},
        {english: 'ho', jap: 'ほ'},
        {english: 'hya', jap: 'ひゃ'},
        {english: 'hyu', jap: 'ひゅ'},
        {english: 'hyo', jap: 'ひょ'},
        {english: 'ba', jap: 'ば'},
        {english: 'bi', jap: 'び'},
        {english: 'bu', jap: 'ぶ'},
        {english: 'be', jap: 'べ'},
        {english: 'bo', jap: 'ぼ'},
        {english: 'bya', jap: 'びゃ'},
        {english: 'byu', jap: 'びゅ'},
        {english: 'byo', jap: 'びょ'},
        {english: 'pa', jap: 'ぱ'},
        {english: 'pi', jap: 'ぴ'},
        {english: 'pu', jap: 'ぷ'},
        {english: 'pe', jap: 'ぺ'},
        {english: 'po', jap: 'ぽ'},
        {english: 'pya', jap: 'ぴゃ'},
        {english: 'pyu', jap: 'ぴゅ'},
        {english: 'pyo', jap: 'ぴょ'},
        {english: 'ma', jap: 'ま'},
        {english: 'mi', jap: 'み'},
        {english: 'mu', jap: 'む'},
        {english: 'me', jap: 'め'},
        {english: 'mo', jap: 'も'},
        {english: 'mya', jap: 'みゃ'},
        {english: 'myu', jap: 'みゅ'},
        {english: 'myo', jap: 'みょ'},
        {english: 'ya', jap: 'や'},
        {english: 'yu', jap: 'ゆ'},
        {english: 'yo', jap: 'よ'},
        {english: 'ra', jap: 'ら'},
        {english: 'ri', jap: 'り'},
        {english: 'ru', jap: 'る'},
        {english: 're', jap: 'れ'},
        {english: 'ro', jap: 'ろ'},
        {english: 'rya', jap: 'りゃ'},
        {english: 'ryu', jap: 'りゅ'},
        {english: 'ryo', jap: 'りょ'},
        {english: 'wa', jap: 'わ'},
        {english: 'o', jap: 'を'},
        {english: 'n', jap: 'ん'},
    ];

    data.forEach(item => {
        if (!store.has(item.jap)) {
            store.set(item.english, item.jap);
        } else {
            console.warn(`Duplicate entry found for ${item.jap}`);
        }
    });

    return Array.from(store).map(([english, jap]) => ({ english, jap }));
};

export default createHiraganaStore;